{"id":1446,"date":"2018-05-02T12:02:38","date_gmt":"2018-05-02T12:02:38","guid":{"rendered":"https:\/\/applicature.com\/?p=1446"},"modified":"2022-01-11T19:38:05","modified_gmt":"2022-01-11T19:38:05","slug":"smart-contract-mistakes-bugs-pitfalls","status":"publish","type":"post","link":"https:\/\/applicature.com\/blog\/blockchain-technology\/smart-contract-mistakes-bugs-pitfalls","title":{"rendered":"Smart Contract Mistakes: Implementation Bugs &#038; Pitfalls"},"content":{"rendered":"<p>Smart contracts make transfer, delivery, and exchange tasks simpler and more convenient for users. They govern a huge percentage of current ICO and Ethereum projects, so smart-contract failures are a major concern for creators and investors.<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-1447 size-full\" title=\"Smart contract definition\" src=\"http:\/\/localhost\/applicatore\/wp-content\/uploads\/2018\/04\/smrt-contracts-blockchain-benes.png\" alt=\"ethereum smart contract bugs\" width=\"1200\" height=\"1322\" srcset=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/smrt-contracts-blockchain-benes.png 1200w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/smrt-contracts-blockchain-benes-318x350.png 318w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/smrt-contracts-blockchain-benes-454x500.png 454w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/smrt-contracts-blockchain-benes-768x846.png 768w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/smrt-contracts-blockchain-benes-930x1024.png 930w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/smrt-contracts-blockchain-benes-600x661.png 600w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/smrt-contracts-blockchain-benes-100x110.png 100w\" sizes=\"(max-width: 1200px) 100vw, 1200px\" \/>You can read more about them in this <span style=\"color: #e70f00;\"><a style=\"color: #e70f00;\" href=\"https:\/\/applicature.com\/blog\/uses-for-smart-contract\" rel=\"noopener\">article<\/a><\/span>.<\/p>\n<p>Ethereum is one of the most popular blockchain platforms for smart-contract creation. It utilizes the Solidity web programming JavaScript language to simplify the process of writing smart contracts.<\/p>\n<h2>Smart Contracts Fail Description<\/h2>\n<p>However, smart contracts are only as smart as their creators, and contract design flaws often lead to bugs.<\/p>\n<p>In terms of conducting interactions between multiple smart contracts, bugs can cause functions to execute from the user address instead of from the owner of the contract.<\/p>\n<p>The National University of Singapore (NUS) has uncovered several severe smart-contract bugs. As a result, an analysis tool called <a href=\"http:\/\/www.comp.nus.edu.sg\/~loiluu\/oyente.html\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"color: #e70f00;\">Oyente<\/span><\/a> was created for scanning smart contracts. Out of the 19,366 Ethereum smart contracts they analyzed, 8,833 of them had bugs!<\/p>\n<p>For example, GitHub user Devops199 had an Ether transaction worth $285 million freeze because of a common bug. A new detection tool became necessary, and Maian was born. The Maian tool enabled a team of five cryptocurrency zealots to discover another 970,898 smart contracts that contained bugs.<\/p>\n<p>A breakdown of the discoveries can be found in the table below:<\/p>\n<p><em><strong><img loading=\"lazy\" class=\"aligncenter wp-image-1448 size-full\" title=\"Categories of smart contracts\" src=\"http:\/\/localhost\/applicatore\/wp-content\/uploads\/2018\/04\/pasted-image-0.png\" alt=\"smart contract fail\" width=\"469\" height=\"149\" srcset=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0.png 469w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-350x111.png 350w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-132x42.png 132w\" sizes=\"(max-width: 469px) 100vw, 469px\" \/><\/strong><\/em><\/p>\n<p><em><strong>Prodigal contracts<\/strong><\/em> transfer Ether or tokens to an incorrect wallet.<\/p>\n<p><em><strong>Suicidal contracts<\/strong><\/em> have a bug that makes the contract vulnerable to being killed by the owner.<\/p>\n<p><em><strong>Greedy contracts<\/strong><\/em> can be controlled by other users, resulting in frozen funds.<\/p>\n<p>There are two other prominent smart-contract discovery tools called <span style=\"color: #e70f00;\"><a style=\"color: #e70f00;\" href=\"https:\/\/github.com\/ConsenSys\/mythril\" target=\"_blank\" rel=\"noopener noreferrer\">Mythril<\/a><\/span> and <span style=\"color: #e70f00;\"><a style=\"color: #e70f00;\" href=\"https:\/\/arxiv.org\/pdf\/1802.06038.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">NUS<\/a><\/span>.<\/p>\n<p>Let\u2019s analyze the most common technical smart-contract pitfalls discovered over the past year.<\/p>\n<h2>Sending And Receiving Money\/Tokens<\/h2>\n<p>Debugging a smart contract is not possible while sending and receiving money or tokens.<\/p>\n<p>Compared to contracts developed for transfer orders, there are two possible implementations you can execute without a message call:<\/p>\n<ol>\n<li>\u201cmine to\u201d the contract address<\/li>\n<li>using selfdestruct(x).<\/li>\n<\/ol>\n<p>When receiving Ether with no called function, you must have a backup function. If this function isn\u2019t present, the Ether will be rejected.<\/p>\n<p>During the execution of the function, the contract is only able to consume the \u201cgas stipend\u201d [2,300 gas] provided \u2014 but this amount of gas is not enough to access storage. To ensure success, always account for the gas requirements for function implementation.<\/p>\n<p>It\u2019s possible to get more gas using addr.call.value(x)() \u2014 similar to addr.transfer(x). With this function, the user can send more gas and get a wider range of functions. This helps to recover a \u201cbad\u201d code, allowing you to avoid having the errors spill into other functioning elements.<\/p>\n<h2>Using Withdrawal Patterns<\/h2>\n<p>The most popular method of sending funds is to use a withdrawal pattern instead of a contract. A customer can also send Ether through a direct send call. It\u2019s best to avoid direct calls, however, because they can compromise security.<\/p>\n<p>Consider this example:<br \/>\nSending a great amount of money to a contract in order to become the \u201crichest.\u201d<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-1450 size-full\" title=\"Scheme of smart contract bug\" src=\"http:\/\/localhost\/applicatore\/wp-content\/uploads\/2018\/04\/pasted-image-0-1.png\" alt=\"scheme of smart contract failed transaction\" width=\"861\" height=\"601\" srcset=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-1.png 861w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-1-350x244.png 350w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-1-500x349.png 500w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-1-768x536.png 768w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-1-600x419.png 600w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-1-132x92.png 132w\" sizes=\"(max-width: 861px) 100vw, 861px\" \/>Here is the other method of sending the pattern:<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-1451 size-full\" title=\"Smart contract bug \" src=\"http:\/\/localhost\/applicatore\/wp-content\/uploads\/2018\/04\/pasted-image-0-2.jpg\" alt=\"smart contract failed transaction\" width=\"824\" height=\"433\" srcset=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-2.jpg 824w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-2-132x69.png 132w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-2-350x184.png 350w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-2-500x263.png 500w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-2-768x404.png 768w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-2-600x315.png 600w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-2-120x63.png 120w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-2-300x158.png 300w\" sizes=\"(max-width: 824px) 100vw, 824px\" \/>In this case, an attacker can trigger a failure through the richest contract address backup function and put the contract into an \u2018injured\u2019 state.<\/p>\n<p>This can be instigated by invoking revert() or by spending more than the 2,300 gas stipend. As a result, delivering funds to an \u2018injured\u2019 contract won\u2019t be successful, and funds can theoretically be stuck in this state indefinitely.<\/p>\n<p>The first \u201cwithdraw\u201d pattern only causes a withdrawal failure, and won\u2019t harm the rest of the contract\u2019s working process.<\/p>\n<p>The best way to minimize loss is to restrict the amount of Ether (or other tokens) in a smart contract.<\/p>\n<h2>External Function Calls<\/h2>\n<p>Another common smart-contract failure cause is an instant working crash of external function calls. Hackers can increase the value of the call stack before interacting with your contract.<\/p>\n<p>Remember that .send(), .call(), .callcode() and .delegatecall() functions all work the same way.<\/p>\n<p>Make sure not to use tx.origin for authorization.<\/p>\n<p>Let\u2019s imagine this is your wallet:<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-1452 \" title=\"The wallet with bug\" src=\"http:\/\/localhost\/applicatore\/wp-content\/uploads\/2018\/04\/pasted-image-0-3.png\" alt=\"ethereum smart contract bugs\" width=\"632\" height=\"274\" srcset=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-3.png 632w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-3-350x152.png 350w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-3-500x217.png 500w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-3-600x260.png 600w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-3-132x57.png 132w\" sizes=\"(max-width: 632px) 100vw, 632px\" \/>and some person encourages you to send Ether to a suspicious wallet:<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-1453 \" title=\"Smart contract wallet with a bug\" src=\"http:\/\/localhost\/applicatore\/wp-content\/uploads\/2018\/04\/pasted-image-0-4.png\" alt=\"Smart contract failed transaction\" width=\"624\" height=\"319\" srcset=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-4.png 620w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-4-350x179.png 350w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-4-500x256.png 500w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-4-600x307.png 600w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-4-132x67.png 132w\" sizes=\"(max-width: 624px) 100vw, 624px\" \/>If the authorization of the wallet was checked by msg.sender, it would send the Ether to the wrong wallet, not to the rightful owner.<\/p>\n<p>The tx.origin function causes it to select the address of the wallet to initiate the transaction. As a result, the hacker\u2019s wallet address will take all of your funds.<\/p>\n<h2>Checking the Return Value of a Send Method<\/h2>\n<p>A lot of contracts do not check the return value or gas levels during a transaction. Remember, if the stack depth is more than 1,024, or if the gas runs out, the transfer is likely to fail.<\/p>\n<p>To minimize the potential of loss, make sure to check the return value, and use a transfer or a pattern to allow the recipient to withdraw funds.<\/p>\n<p>It\u2019s worth mentioning that data about transaction content and state variable are accessible to everyone, even if it is marked private.<\/p>\n<p>Encryption can help you avoid this issue, but if the data can be read, it\u2019s still possible.<\/p>\n<p>By default, access to a contract reading can be restricted by other contracts. You can easily change it by making the state public.<\/p>\n<p>It\u2019s also possible to restrict the number of people who can edit the contract\u2019s state and use its functions.<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-1454 size-full\" title=\"The scheme of access restriction\" src=\"http:\/\/localhost\/applicatore\/wp-content\/uploads\/2018\/04\/pasted-image-0-5.png\" alt=\"debugging a smart contract\" width=\"457\" height=\"885\" srcset=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-5.png 457w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-5-181x350.png 181w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-5-258x500.png 258w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-5-57x110.png 57w\" sizes=\"(max-width: 457px) 100vw, 457px\" \/><\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-1455 size-full\" title=\"Restriction to the wallet\" src=\"http:\/\/localhost\/applicatore\/wp-content\/uploads\/2018\/04\/pasted-image-0-6.png\" alt=\"debugging a smart contract way\" width=\"475\" height=\"479\" srcset=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-6.png 475w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-6-347x350.png 347w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-6-100x100.png 100w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-6-109x110.png 109w\" sizes=\"(max-width: 475px) 100vw, 475px\" \/>Here are some general recommendations regarding source-code quality:<\/p>\n<ul>\n<li>Restrict the number of local variables.<\/li>\n<li>Restrict the length of functions.<\/li>\n<li>Document functions to make your intentions understandable for other people. This will help to determine if the action of the code differs from your personal code.<\/li>\n<\/ul>\n<h2>Reentrancy<\/h2>\n<p>Consider this hypothetical scenario:<\/p>\n<p>An interaction between contract (A) with contract (B) gives control to contract (B). Contract B can call back into A until the operation is finished.<\/p>\n<p>The code below provides an example of a related bug that can crop up because of the limited gas required to send:<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-1456 size-full\" title=\"An example of wallet with a bug\" src=\"http:\/\/localhost\/applicatore\/wp-content\/uploads\/2018\/04\/pasted-image-0-7.png\" alt=\"smart contract failed transaction\" width=\"540\" height=\"231\" srcset=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-7.png 540w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-7-350x150.png 350w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-7-500x214.png 500w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-7-132x56.png 132w\" sizes=\"(max-width: 540px) 100vw, 540px\" \/>The problem lies within the following:<\/p>\n<p>The Ether transfer process contains the code execution. The recipient\u2019s contract can call back into withdrawal, making it possible to refund several times and possess all the contract\u2019s Ether.<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-1457\" title=\"Contract containing a bug\" src=\"http:\/\/localhost\/applicatore\/wp-content\/uploads\/2018\/04\/pasted-image-0-8.png\" alt=\"smart contract mistakes during the transaction\" width=\"601\" height=\"232\" srcset=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-8.png 601w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-8-350x135.png 350w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-8-500x193.png 500w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-8-600x232.png 600w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-8-132x51.png 132w\" sizes=\"(max-width: 601px) 100vw, 601px\" \/><\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-1458 size-full\" title=\"Smart contract bug\" src=\"http:\/\/localhost\/applicatore\/wp-content\/uploads\/2018\/04\/pasted-image-0-9.png\" alt=\"Smart contract failed transaction\" width=\"435\" height=\"230\" srcset=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-9.png 435w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-9-350x185.png 350w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-9-132x70.png 132w\" sizes=\"(max-width: 435px) 100vw, 435px\" \/>Use the following Checks-Effects-Interactions pattern to avoid such situations.<\/p>\n<p>All checks regarding who called the function \u2014 if there are arguments in range, whether enough Ether was sent, or whether the person has tokens \u2014 should be done from the very beginning.<\/p>\n<p>After that, make changes to the state variables of the contract. Consider interactions among the contracts at the end of any function.<\/p>\n<p>In the past, in order to be in good standing, a contract had to wait for external function calls. That is one of the most significant effects of re-entrancy. Calls to the appropriate contracts can also cause calls to non-planned contracts.<\/p>\n<h2>Gas Limit and Loops<\/h2>\n<p>Be careful with loops that don\u2019t have a defined number of iterations, or ones that have loops that could be influenced by storage values. The amount of gas is restricted so that transferring consumes a specific amount of it.<\/p>\n<p>In any case, the number of iterations in a loop might increase the gas limit. This can cause a freeze at a certain point. However, it may not be related to constant read data functions. These functions can be called by other contracts or other connected operations and interrupt their activity. Please be vigilant about such cases in the documentation of your contracts.<\/p>\n<p>Removing an intermediary will grant you some of the benefits of a new code. Providing new self-checking functions to a smart contract can help determine whether any Ether has leaked or if the sum of the tokens is the same as the balance of the contract. Gas limitations can also be calculated throughout the chain.<\/p>\n<p>If a check detects a problem with the contract, it defaults to \u201cfailsafe\u201d mode. In this case, many functions become unavailable, and control is given to a third party, or the contract demands the funds back.<\/p>\n<h2>ATTENTION! SUICIDE Function<\/h2>\n<p>An important example of the suicide function is when a token freezes on all Parity multisig wallets.<\/p>\n<p>One high-profile incident involved a failure that occurred due to careless handling of the library\u2019s code, rendering approximately $280 million of Ether inaccessible.<\/p>\n<p>The user conducted only two transactions:<\/p>\n<ol>\n<li>initWallet function &#8211; to vary the owner address state<\/li>\n<\/ol>\n<p><img loading=\"lazy\" class=\"alignnone wp-image-1459 size-full\" title=\"initWallet function\" src=\"http:\/\/localhost\/applicatore\/wp-content\/uploads\/2018\/04\/pasted-image-0-10.png\" alt=\"smart contract fail\" width=\"647\" height=\"182\" srcset=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-10.png 647w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-10-132x37.png 132w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-10-350x98.png 350w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-10-500x141.png 500w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-10-600x169.png 600w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-10-120x34.png 120w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-10-300x84.png 300w\" sizes=\"(max-width: 647px) 100vw, 647px\" \/><\/p>\n<p>The main causes were:<\/p>\n<ol>\n<li>The wallet could be initialized only once.<\/li>\n<li>The function could only be implemented by an uninitialized modifier.<\/li>\n<\/ol>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-1460 size-full\" title=\"initWallet function example\" src=\"http:\/\/localhost\/applicatore\/wp-content\/uploads\/2018\/04\/pasted-image-0-11.png\" alt=\"smart contract mistakes\" width=\"647\" height=\"178\" srcset=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-11.png 647w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-11-350x96.png 350w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-11-500x138.png 500w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-11-600x165.png 600w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-11-132x36.png 132w\" sizes=\"(max-width: 647px) 100vw, 647px\" \/>The Wallet Library is not equipped with wallet functions. The code was transferred to other contracts as a DELEGATE CALL.<\/p>\n<p>2. The \u201ckill\u201d transaction<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-1461 size-full\" title=\"The \u201ckill\u201d transaction\" src=\"http:\/\/localhost\/applicatore\/wp-content\/uploads\/2018\/04\/pasted-image-0-12.png\" alt=\"ethereum smart contract bugs\" width=\"647\" height=\"81\" srcset=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-12.png 647w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-12-350x44.png 350w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-12-500x63.png 500w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-12-600x75.png 600w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/04\/pasted-image-0-12-132x17.png 132w\" sizes=\"(max-width: 647px) 100vw, 647px\" \/>The kill transaction froze all wallets that were connected to the library code.<\/p>\n<p>So, how do you discover these bugs ahead of time?<\/p>\n<ol>\n<li>Provide an inventory of all SSTORE instructions that might be called by anyone.<\/li>\n<li>Check the information about the SUICIDE function, and try to solve all existing and potential problems.<\/li>\n<li>If you have found that some indexes of SSTORE are vulnerable, fix this by accessing the SUICIDE block.<\/li>\n<\/ol>\n<p>This unprotected SUICIDE call facilitated the Parity catastrophe, and could have been solved using Mythril.<\/p>\n<h2>Formal Verification<\/h2>\n<p>With formal verification, the customer makes sure that the source code carries out an appropriate formal specification.<\/p>\n<p>This helps determine the difference between the specification you had and the process you carried out. In this way, you can avoid critical mistakes.<\/p>\n<p>To implement formal verification, you need to:<\/p>\n<ol>\n<li>Provide an audit of all arithmetic operations with user-supplied data<\/li>\n<li>Verify all working elements before the arithmetic operations<\/li>\n<li>Use the safe-math library to be sure that all functions work appropriately, and to see if there are any overflows.<\/li>\n<\/ol>\n<p>Despite all of the above-mentioned risks, there is a solution.<\/p>\n<p>Contact the skilled, seasoned <span style=\"color: #e70f00;\"><a style=\"color: #e70f00;\" href=\"https:\/\/applicature.com\/\" rel=\"noopener\">Applicature<\/a><\/span> team to provide a professional, low-risk smart contract for your project.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Smart contracts make transfer, delivery, and exchange tasks simpler and more convenient for users. They govern a huge percentage of current ICO and Ethereum projects, so smart-contract failures are a major concern for creators and investors. You can read more about them in this article. Ethereum is one of the most popular blockchain platforms for [&hellip;]<\/p>\n","protected":false},"author":10,"featured_media":173951,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[132],"tags":[154,194,195,215,258,280],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>- Applicature<\/title>\n<meta name=\"description\" content=\"Ethereum smart contract bugs often occur in practice during the smart contract execution. Check out a list of common mistakes of smart contracts.\" \/>\n<meta name=\"robots\" content=\"index, follow\" \/>\n<meta name=\"googlebot\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<meta name=\"bingbot\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/applicature.com\/blog\/blockchain-technology\/smart-contract-mistakes-bugs-pitfalls\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"- Applicature\" \/>\n<meta property=\"og:description\" content=\"Ethereum smart contract bugs often occur in practice during the smart contract execution. Check out a list of common mistakes of smart contracts.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/applicature.com\/blog\/blockchain-technology\/smart-contract-mistakes-bugs-pitfalls\/\" \/>\n<meta property=\"og:site_name\" content=\"Applicature\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/applicature\/\" \/>\n<meta property=\"article:published_time\" content=\"2018-05-02T12:02:38+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-11T19:38:05+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/05\/23.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1100\" \/>\n\t<meta property=\"og:image:height\" content=\"575\" \/>\n<meta property=\"fb:app_id\" content=\"156197445002802\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/applicature.com\/#website\",\"url\":\"https:\/\/applicature.com\/\",\"name\":\"Applicature\",\"description\":\"Blockchain \/ Smart Contracts \/ Decentralized Apps\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/applicature.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/applicature.com\/blog\/blockchain-technology\/smart-contract-mistakes-bugs-pitfalls\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/05\/23.png\",\"width\":1100,\"height\":575},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/applicature.com\/blog\/blockchain-technology\/smart-contract-mistakes-bugs-pitfalls\/#webpage\",\"url\":\"https:\/\/applicature.com\/blog\/blockchain-technology\/smart-contract-mistakes-bugs-pitfalls\/\",\"name\":\"- Applicature\",\"isPartOf\":{\"@id\":\"https:\/\/applicature.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/applicature.com\/blog\/blockchain-technology\/smart-contract-mistakes-bugs-pitfalls\/#primaryimage\"},\"datePublished\":\"2018-05-02T12:02:38+00:00\",\"dateModified\":\"2022-01-11T19:38:05+00:00\",\"author\":{\"@id\":\"https:\/\/applicature.com\/#\/schema\/person\/49c432f184a070a84c8574203d5b6ce9\"},\"description\":\"Ethereum smart contract bugs often occur in practice during the smart contract execution. Check out a list of common mistakes of smart contracts.\",\"breadcrumb\":{\"@id\":\"https:\/\/applicature.com\/blog\/blockchain-technology\/smart-contract-mistakes-bugs-pitfalls\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/applicature.com\/blog\/blockchain-technology\/smart-contract-mistakes-bugs-pitfalls\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/applicature.com\/blog\/blockchain-technology\/smart-contract-mistakes-bugs-pitfalls\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"item\":{\"@type\":\"WebPage\",\"@id\":\"https:\/\/applicature.com\/blog\/blockchain-technology\/smart-contract-mistakes-bugs-pitfalls\/\",\"url\":\"https:\/\/applicature.com\/blog\/blockchain-technology\/smart-contract-mistakes-bugs-pitfalls\/\",\"name\":\"Smart Contract Mistakes: Implementation Bugs &#038; Pitfalls\"}}]},{\"@type\":[\"Person\"],\"@id\":\"https:\/\/applicature.com\/#\/schema\/person\/49c432f184a070a84c8574203d5b6ce9\",\"name\":\"olha.hlebiv\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/applicature.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/11\/applicature-figure.png\",\"caption\":\"olha.hlebiv\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/posts\/1446"}],"collection":[{"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/users\/10"}],"replies":[{"embeddable":true,"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/comments?post=1446"}],"version-history":[{"count":0,"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/posts\/1446\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/media\/173951"}],"wp:attachment":[{"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/media?parent=1446"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/categories?post=1446"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/tags?post=1446"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}