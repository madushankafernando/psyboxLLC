{"id":2628,"date":"2018-10-25T14:24:58","date_gmt":"2018-10-25T14:24:58","guid":{"rendered":"https:\/\/applicature.com\/?p=2628"},"modified":"2020-02-17T19:57:21","modified_gmt":"2020-02-17T19:57:21","slug":"blockchain-code-examples","status":"publish","type":"post","link":"https:\/\/applicature.com\/blog\/blockchain-technology\/blockchain-code-examples","title":{"rendered":"Blockchain Technology Examples And Types of Blockchain Codes"},"content":{"rendered":"<p>The cryptocurrency community has valued blockchain technology very highly for almost ten years. It emerged in 2008 designed by Satoshi Nakamoto. Initially, it served as a platform for Bitcoin currency transactions. Over time, it has matured and developed into a multi-purpose public ledger capable of solving a wide range of tasks. In order to deploy a blockchain, you are welcome to go through our tutorial and choose the best-matching blockchain code example.<\/p>\n<p>With <span style=\"color: #e70f00;\"><a style=\"color: #e70f00;\" href=\"https:\/\/applicature.com\/blog\/blockchain-implementation\">blockchain implementation<\/a><\/span>, one can distribute and share digital information in a decentralized manner. In addition, it is possible to decrease data forgery, copying, and tampering. Secure transparency is a valuable blockchain peculiarity that contributes positively to the workflow of various industries and enhances their productivity and efficiency.<\/p>\n<p>Bitcoin appeared as the first cryptocurrency and gained tremendous popularity. As of today, the total Bitcoin market cap is approximately $111 billion. Besides Bitcoin, there have appeared numerous other cryptocurrencies currently used for financial transactions within blockchain platforms:<\/p>\n<p>[visualizer id=&#8221;2563&#8243;]<\/p>\n<h2>Types Of Blockchains<\/h2>\n<p>Currently, there\u00a0are many blockchains producing the above-mentioned cryptocurrencies. Moreover, they all hold certain digital value. Current types of blockchain are public, private, and federated. Let\u2019s take a closer look at them and define their distinctive features.<\/p>\n<h3>Public Blockchain Technology Example<\/h3>\n<p>Public blockchains are likely to substitute a majority of functions provided by common financial establishments. This is possible due to enhanced software that changes traditional financial system approaches.<\/p>\n<p>Most of blockchains use the proof of work (PoW) consensus algorithms that are publicly accessible and defined as non permissioned. In particular, this means that all users:<\/p>\n<ul>\n<li>can participate in this type of blockchain without any restrictions<\/li>\n<li>are able to download the source code and run a node on their personal devices and validate the process of transactions<\/li>\n<li>can transact payments via the network and participate in the blockchain<\/li>\n<li>can view transaction history while still remaining anonymous, due to transparency<\/li>\n<\/ul>\n<p>Bitcoin is one of the brightest public examples of blockchain, holding a position among <em>Ethereum<\/em>, and <em>Litecoin<\/em>.<\/p>\n<p>These blockchain technologies provide a chance of fundamentally changing common business models. They also reduce costs by eliminating server maintenance fees and providing almost free possibilities of decentralized applications deployment.<\/p>\n<h3>Private Blockchain Technology Example<\/h3>\n<p>Private blockchains solve issues of effectiveness, safety, security, and deception. While private blockchains don\u2019t have the great potential of causing revolutionary changes to traditional financial systems as public blockchains, they have a range of other advantages.<\/p>\n<p>Private blockchains provide write permissions to a centralized entity. Read permissions can be accessible or restricted according to a desired degree. Private example of blockchain applications involves internal company\u2019s data governance and audit. Hence, in this case, the necessity of public access isn\u2019t necessary. In a different situation, public access is desirable.<\/p>\n<p>Businesses choose private blockchains for internal use rather than sharing information. Hence, a limited group of people can track and view the company\u2019s transactions.<\/p>\n<p>One of the drawbacks of such a system is that it is similar to a centralized one, and therefore is more vulnerable. However, private blockchains win in scalability aspects and better compliance with regulatory policies.<\/p>\n<p>MONAX and Multichain serve as examples of private blockchain technology.<\/p>\n<p>Private blockchains:<\/p>\n<ul>\n<li>reduce costs<\/li>\n<li>reduce data excess<\/li>\n<li>simplify documentation process<\/li>\n<li>lower the use of manually-maintained mechanisms<\/li>\n<\/ul>\n<h3>Federated Blockchain Technology Example<\/h3>\n<p>Federated blockchain, also referred to as Consortium, functions are led by a group of users. These blockchains don\u2019t allow any user to interfere with the information concerning transactions and their verification. This example of blockchain is fast and has extended privacy settings. This is evidenced by the fact that many companies in the banking sector and similar institutions use it. A set of selected-in-advance nodes manage the process of reaching consensus. For instance, to reach consensus, no less than ten out of fifteen participants have to sign and approve a block. Only then is it valid. In addition, federated blockchain can include options to be read by public or restricted to the view.<\/p>\n<p>R3, EWF and B3i are examples of consortium blockchains.<\/p>\n<p>The impact of these blockchains is the same as private blockchain. With federated blockchains one can:<\/p>\n<ul>\n<li>reduce costs and data redundancy<\/li>\n<li>eliminate the use of mechanisms that require manual management<\/li>\n<\/ul>\n<p>See the following comparison table:<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter size-full wp-image-2629\" src=\"http:\/\/localhost\/applicatore\/wp-content\/uploads\/2018\/10\/types-of-blockchains-comparison.jpg\" alt=\"types of blockchains\" width=\"945\" height=\"540\" srcset=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/10\/types-of-blockchains-comparison.jpg 945w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/10\/types-of-blockchains-comparison-132x75.jpg 132w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/10\/types-of-blockchains-comparison-350x200.jpg 350w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/10\/types-of-blockchains-comparison-500x286.jpg 500w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/10\/types-of-blockchains-comparison-768x439.jpg 768w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/10\/types-of-blockchains-comparison-600x343.jpg 600w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/10\/types-of-blockchains-comparison-120x69.jpg 120w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/10\/types-of-blockchains-comparison-300x171.jpg 300w\" sizes=\"(max-width: 945px) 100vw, 945px\" \/><br \/>\nAs of April 2018, public and private blockchains were used the most. Together they make up 44% of worldwide organizations that implement blockchain. Next follow consortium blockchains (36%) and finally, all other types of blockchains (3%).<\/p>\n<p>[visualizer id=&#8221;2632&#8243;]<\/p>\n<h2>Issues Concerning Blockchain Development<\/h2>\n<p>In order to create a strong and powerful blockchain, it is crucial to be aware of possible issues in advance, in order to avoid them. These issues concern security, resource management, the efficiency of performance\/productivity, and isolation.<\/p>\n<h3>Security Issue<\/h3>\n<p>Blockchains provide an increased level of safety and privacy. Therefore, they must be highly secure. The written code should be hack-resistant and eliminate possible bugs and vulnerabilities. Since anyone can usually view the source code, it is easy to find and solve any possible problems.<\/p>\n<p>On the other hand, hackers are programmers as well. This means that blockchain has a high likelihood of suffering attacks. This requires creating smart and complex code structure which is impossible to tamper with. That is why the development and deployment of a new blockchain takes time and extra effort. It has to be precisely and wisely created to further serve all users. Because of the immutable and irreversible nature of the blockchain technology, this task is vital.<\/p>\n<h3>Resource Management Issue<\/h3>\n<p>While deploying a new blockchain, keep in mind that the task isn\u2019t done in one step. After the blockchain implementation, there will be further steps to take, and problems to solve. Thus, it is necessary to keep up with modern network requirements and demands. All kinds of requests will have to be managed and taken care of whether they are remote or local. Constant upgrades will necessary to meet all demands of the network. Examples include suitability with the latest applications, currency acceptance, etc.<\/p>\n<h3>High Performance Issue<\/h3>\n<p>Any blockchain must provide the highest efficiency, and be capable of handling a range of numerous tasks. In order to guarantee optimal performance, developers must choose the most flexible and suitable coding language to deal with all requirements, such as distributed operations or resource management. This may involve the solving tasks in a parallel manner. Some blockchains don\u2019t provide such an option. Hence, the programmer should decide at the very beginning which exact solutions to solve and the required measures to undertake.<\/p>\n<p>This issue might seem complex, as it directly deals with multiple transactions that cannot be performed in parallel to eliminate double spending, for instance. Therefore, some languages suit best in parallel operations when others \u2013 in non-parallel ones.<\/p>\n<h3>Isolation Issue<\/h3>\n<p>Isolation solves problems with deterministic behavior. To understand what deterministic means, consider the following equation:<\/p>\n<p>[visualizer id=&#8221;2633&#8243;]<\/p>\n<p>While deploying a blockchain, all transactions are to be deterministic, meaning one transaction cannot behave in different ways. Moreover, the same applies to smart-contract functionality. One smart contract has a unique working scheme which cannot just suddenly change.<\/p>\n<p><span style=\"color: #e70f00;\"><a style=\"color: #e70f00;\" href=\"https:\/\/applicature.com\/contact-us\/\">Contact Applicature<\/a><\/span> if you have any questions considering <span style=\"color: #e70f00;\"><a style=\"color: #e70f00;\" href=\"https:\/\/applicature.com\/smart-contracts-development\/\">smart contract development<\/a><\/span>.<\/p>\n<p>In order to solve such problems, you have to isolate transactions or smart contracts (SCs) from the elements that are not deterministic.<\/p>\n<h2>Blockchain Code Tutorial<\/h2>\n<p>In order to code for any blockchain, developers have to evaluate the above-mentioned challenges and choose the best-matching coding language. As of today, there exist numerous ways of coding blockchain. Below, we will show the most common coding languages with a blockchain code example concerning each of them.<\/p>\n<p><em>Such languages as C\/C++, Go, Python, and Javascript <\/em>are<em> the most commonly used.<\/em><\/p>\n<p><strong>C++<\/strong> is one of the first coding languages designed by Bjarne Stroustrup. It is more flexible and efficient than C language and additionally is object-oriented. C++ is designed like OOP (Object Oriented Programming) language. As a result, its main idea is to allow a programmer to write code according to his preferences, following a compiler complication mechanism.<\/p>\n<p><strong>Javascript<\/strong> is one of the core languages used in web programming, commonly for interactive webpage creation. With the appearance of Node.JS, which is similar to a programming platform, one can use Google\u2019s V8 JavaScript Engine that allows JavaScript to interact with I\/O via its API, written in C++.<\/p>\n<p><strong>Python<\/strong>, created by Dutch programmer Guido van Rossum in 1991, aims to make the code simpler and as minimal as possible. Consequently, it provides simplicity by eliminating the use of curly brackets or keywords substituted by white spaces. Python is considered to be a scripting language that has a lot of libraries. Hence, this allows a programmer to work with system processes without memory management.<\/p>\n<p><strong>Solidity<\/strong> language has recently gained much popularity. It is perfect for decentralized application deployment or for those running initial coin offerings. Solidity is deliberately simplified, freely-typed language with an ECMAScript or C++ similar syntax. Follow the link to find out more about <span style=\"color: #e70f00;\"><a style=\"color: #e70f00;\" href=\"https:\/\/applicature.com\/ico-consulting\/\">ICO setup<\/a><\/span> and launch using Solidity.<\/p>\n<p><strong>Azure<\/strong>, is a platform better suited to designing applications representing multi-party workflows determined by the code of configuration and SCs. Azure is simple in development, speeds up processes and provides enhanced security and scalability.<\/p>\n<h3>C++ Blockchain Example Code<\/h3>\n<p>C++ simple example is the \u201cHello World\u201d program:<\/p>\n<pre line=\"1\" lang=\"Javascript\">#include\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\r\ncout &lt;&lt; \"Hello World!\";\r\n\r\nreturn 0;\r\n\r\n}<\/pre>\n<p>Pretty simple, right? It is worth mentioning that the Bitcoin blockchain is programmed on it! The reasons why C++ is so valuable in the blockchain community are due to the following features:<\/p>\n<p><strong>1. Memory Control:<\/strong> in order to solve the above-mentioned challenges of resource management and security issues, C++ helps fully control central point unit and memory. All network nodes can accept\/reject exact blocks to avoid the possibility of chain forks.<\/p>\n<p><strong>2. Threading:<\/strong> concerns the issue of parallelized tasks performance. C++ suits well to handle both parallelized and non-parallelized tasks as its threading ability allows simultaneous instruction and transaction execution.<\/p>\n<p><strong>3. Move semantics:<\/strong> one of the most advantageous C++ features allowing to move content between the objects instead of copying semantics purposely.<\/p>\n<p>[visualizer id=&#8221;2634&#8243;]<\/p>\n<p>When we are using the move semantics, the value of \u201cb\u201d need not be unchanged. That is the difference between copy semantics and move semantics.<\/p>\n<p>The biggest advantage of move semantics is that you can get copies of certain data only when you need them, which greatly decreases redundancy in the code and gives a huge performance boost.<\/p>\n<p><strong>4. Compile Time Polymorphism:<\/strong> is an object-oriented programming property. C++ implements this property with:<br \/>\n[visualizer id=&#8221;2635&#8243;]<\/p>\n<p>The compile time polymorphism separates responsibilities in different functions by increasing the system performance.<\/p>\n<p><strong>5. Code Isolation:<\/strong> namespace features can be entered across different programs in order to avoid name collisions. In addition, due to C++ classes, it functions as an API boundary to provide clear separation.<\/p>\n<p><strong>6. Maturity:<\/strong> C++ is considered to be a mature and regularly upgraded language. Additionally, its features solve numerous real issues from performance profiling to problem detection.<\/p>\n<h3>Javascript Blockchain Example Code<\/h3>\n<p>To create a blockchain using Javascript, let\u2019s go through the basics.<\/p>\n<p>Each block in a chain of blocks has a hash of a previous block. In the event of an attack or malicious behavior, the hash is significantly changed, which affects the whole blockchain, freezing it and therefore eliminating the chance of changing the block.<\/p>\n<p>To create a block, consider the details it contains:<\/p>\n<p>[visualizer id=&#8221;2636&#8243;]<\/p>\n<p><strong>1. Create a Block. Blockchain code example:<\/strong><\/p>\n<pre line=\"1\" lang=\"Javascript\">const SHA256 = require(\"crypto-js\/sha256\");\r\n\r\nclass Block\r\n\r\n{\r\n\r\nconstructor(index, timestamp, data, previousHash = '')\r\n\r\n{\r\n\r\nthis.index = index;\r\n\r\nthis.previousHash = previousHash;\r\n\r\nthis.timestamp = timestamp;\r\n\r\nthis.data = data;\r\n\r\nthis.hash = this.calculateHash();\r\n\r\n}\r\n\r\ncalculateHash()\r\n\r\n{\r\n\r\nreturn SHA256(this.index + this.previousHash + this.timestamp + JSON.stringify(this.data)).toString();\r\n\r\n}\r\n\r\n}<\/pre>\n<p>Code Analysis:<\/p>\n<ul>\n<li>Include crypto-js library.<\/li>\n<li>Declare the constructor that will be called during instantiation of the class. The goal of a constructor is to initialize class instance.<\/li>\n<li>Hash all the content to receive the block hash.<\/li>\n<li>Use the JSON.stringify function to format block data.<\/li>\n<\/ul>\n<p><strong>2. Create a blockchain:<\/strong><\/p>\n<p>Create a genesis block, the first block that invokes immediately on the blockchain.<\/p>\n<pre line=\"1\" lang=\"Javascript\">createGenesisBlock()\r\n\r\n{\r\n\r\nreturn new Block(0, \u201c01\/01\/2018\u201d, \u201cGenesis block\u201d, \u201c0\u201d);\r\n\r\n}<\/pre>\n<p>Add other blocks. In order to connect blocks, use this function:<\/p>\n<pre line=\"1\" lang=\"Javascript\">getLatestBlock()\r\n\r\n{\r\n\r\nreturn this.chain[this.chain.length - 1];\r\n\r\n}\r\naddBlock(newBlock) {\r\n\r\nnewBlock.previousHash = this.getLatestBlock().hash;\r\n\r\nnewBlock.hash = newBlock.calculateHash();\r\n\r\nthis.chain.push(newBlock);\r\n\r\n}<\/pre>\n<p>Make sure that values of the previous and current blocks should match, in order for n the new block to be considered valid.<\/p>\n<p>Validate the chain, checking everything for stability and eliminating vulnerabilities.<\/p>\n<pre line=\"1\" lang=\"Javascript\">for (let i = 1; i &lt; this.chain.length; i++)\r\n\r\n{\r\n\r\nconst currentBlock = this.chain[i];\r\n\r\nconst previousBlock = this.chain[i - 1];\r\n\r\nif (currentBlock.hash !== currentBlock.calculateHash()) {\r\n\r\nreturn false;\r\n\r\n}\r\n\r\nif (currentBlock.previousHash !== previousBlock.hash)\r\n\r\n{\r\n\r\nreturn false;\r\n\r\n}\r\n\r\n}\r\n\r\nreturn true;\r\n\r\n}<\/pre>\n<p>Finally, you are able to use your blockchain!<\/p>\n<h3>Blockchain Python Example<\/h3>\n<p>As we have mentioned before, Python is a simplified coding language which is efficient to use. As an example, here is the \u201cHello World\u201d Python program:<\/p>\n<pre line=\"1\" lang=\"Javascript\">print(\u2018Hello, world!\u2019)<\/pre>\n<p>That\u2019s actually it. In contrast\u00a0to C++ program, you can see how simple Python is.<\/p>\n<p>Now let\u2019s move on to the development stages:<\/p>\n<p>1. Create a block by adding a hashlib:<\/p>\n<pre line=\"1\" lang=\"Javascript\">class Block:\r\ndef __init__(self, index, timestamp, data, previous_hash):\r\nself.index = index\r\nself.timestamp = timestamp\r\nself.data = data\r\nself.previous_hash = previous_hash\r\nself.hash = self.hash_block()\r\n\r\ndef hash_block(self):\r\nsha = hasher.sha256()\r\nsha.update(str(self.index) +\r\nstr(self.timestamp) +\r\nstr(self.data) +\r\nstr(self.previous_hash))\r\nreturn sha.hexdigest()<\/pre>\n<p>2. Create a genesis block (the first one on blockchain) by entering datetime as date:<\/p>\n<pre line=\"1\" lang=\"Javascript\">def create_genesis_block():\r\n\r\nreturn Block(0, date.datetime.now(), \u201cGenesis Block\u201d, \u201c0\u201d)<\/pre>\n<p>3. Create and connect the other blocks via the following function:<\/p>\n<pre line=\"1\" class=\"\" lang=\"Javascript\">def next_block(last_block):\r\nthis_index = last_block.index + 1\r\nthis_timestamp = date.datetime.now()\r\nthis_data = \"Hey! I'm block \" + str(this_index)\r\nthis_hash = last_block.hash\r\nreturn Block(this_index, this_timestamp, this_data, this_hash)<\/pre>\n<p>Block data:<\/p>\n<p>[visualizer id=&#8221;2637&#8243;]<\/p>\n<p>4. The next step is blockchain creation:<\/p>\n<pre line=\"1\" lang=\"Javascript\">blockchain = [create_genesis_block()]\r\nprevious_block = blockchain[0]\r\n\r\nnum_of_blocks_to_add = 15\r\n\r\nfor i in range(0, num_of_blocks_to_add):\r\nblock_to_add = next_block(previous_block)\r\nblockchain.append(block_to_add)\r\nprevious_block = block_to_add\r\n# Tell everyone about it!\r\nprint \"Block #{} has been added to the blockchain!\".format(block_to_add.index)\r\nprint \"Hash: {}n\".format(block_to_add.hash)<\/pre>\n<p>Here, we\u2019ve created a genesis block assigning it the \u201cprevious block\u201d value. Then, we\u2019ve decided on a number of blocks to add and then printed the number of the added blocks along with their hashes.<\/p>\n<p>This is how the print out can look like:<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter size-full wp-image-2638\" src=\"http:\/\/localhost\/applicatore\/wp-content\/uploads\/2018\/10\/Python-print-out.jpg\" alt=\"python blockchain code example print out\" width=\"634\" height=\"513\" srcset=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/10\/Python-print-out.jpg 634w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/10\/Python-print-out-132x107.jpg 132w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/10\/Python-print-out-350x283.jpg 350w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/10\/Python-print-out-500x405.jpg 500w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/10\/Python-print-out-600x485.jpg 600w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/10\/Python-print-out-120x97.jpg 120w, https:\/\/applicature.com\/wp-content\/uploads\/2018\/10\/Python-print-out-300x243.jpg 300w\" sizes=\"(max-width: 634px) 100vw, 634px\" \/><\/p>\n<p>It\u2019s up to you to add any other complicated features!<\/p>\n<h3>Solidity Example Code<\/h3>\n<p>Solidity is widely used by programmers and developers to code within dApp deployment and for ICO launches. Here\u2019s how the example code looks:<\/p>\n<pre line=\"1\" lang=\"Javascript\">contract BasicIterator\r\n\r\n{\r\n\r\naddress creator; \/\/ reserve one \"address\"-type spot\r\n\r\nuint8[10] integers; \/\/ reserve a chunk of storage for 10 8-bit unsigned integers in an array\r\n\r\nfunction BasicIterator()\r\n\r\n{\r\n\r\ncreator = msg.sender;\r\n\r\nuint8 x = 0;\r\n\r\n\/\/Section 1: Assigning values\r\n\r\nwhile(x &lt; integers.length) {\r\n\r\nintegers[x] = x;\r\n\r\nx++;\r\n\r\n} }\r\n\r\nfunction getSum() constant returns (uint) {\r\n\r\nuint8 sum = 0;\r\n\r\nuint8 x = 0;\r\n\r\n\/\/Section 2: Adding the integers in an array.\r\n\r\nwhile(x &lt; integers.length) {\r\nsum = sum + integers[x];\r\n\r\nx++;\r\n}\r\n\r\nreturn sum;\r\n\r\n}\r\n\r\n\/\/ Section 3: Killing the contract\r\n\r\nfunction kill()\r\n\r\n{\r\n\r\nif (msg.sender == creator)\r\n\r\n{\r\n\r\nsuicide(creator);\r\n\r\n}\r\n\r\n}\r\n\r\n}<\/pre>\n<p>Now let\u2019s take a closer look at development stages:<\/p>\n<p>1. First of all, assign the values: fill up the integers array with a \u201cwhile loop\u201d:<\/p>\n<pre line=\"1\" class=\"\" lang=\"Javascript\">while(x &lt; integers.length) {\r\n\r\nintegers[x] = x;\r\n\r\nx++;\r\n\r\n}<\/pre>\n<p>The x integer holds the value of 0. Furthermore, the while loop starts from 0 and represents the integer length capacity. If it goes up to 9, you\u2019ll get the following value: 0,1,2,3,4,5,6,7,8,9.<\/p>\n<p>2. Add the contents of an array using the while loop and a \u201csum\u201d variable.<\/p>\n<p>3. Finally, call \u201cKill the Contract\u201d function to return remained funds to the contract creator.<\/p>\n<p>These are the main events to create the blockchain in Solidity language. Learn more about <a href=\"https:\/\/applicature.com\/blog\/create-smart-contract-quickly-and-easily\"><span style=\"color: #e70f00;\">creating smart contracts in Solidity language here<\/span>.<\/a><\/p>\n<h3>Azure Decentralized App Example<\/h3>\n<p>Last, but not the least, is the Azure coding platform. It can serve as Azure blockchain example as well. It is mostly used for decentralized applications deployment.<br \/>\nFirst, create a configuration file. Its metadata determines enhanced workflows and dAPP models of interaction.<\/p>\n<p>First of all, choose the editor you prefer, and create a \u201cHelloBlockchain.json\u201d file.<\/p>\n<p>Then follow these steps:<\/p>\n<p>1. Create application metadata: add its name and description. Include application roles and the blockchain participants according to functionality:<\/p>\n<pre line=\"1\" lang=\"Javascript\">{\r\n\"ApplicationName\": \"HelloBlockchain\",\r\n\"DisplayName\": \"Hello, Blockchain!\",\r\n\"Description\": \"A simple application to send request and get response\",\r\n\"ApplicationRoles\": [\r\n{\r\n\"Name\": \"Requestor\",\r\n\"Description\": \"A person sending a request.\"\r\n},\r\n{\r\n\"Name\": \"Responder\",\r\n\"Description\": \"A person responding to a request\"\r\n}\r\n],<\/pre>\n<p>2. Define workflows of the contract stages and actions:<\/p>\n<p>[visualizer id=&#8221;2639&#8243;]<\/p>\n<pre line=\"1\" lang=\"Javascript\">\"Workflows\": [\r\n{\r\n\"Name\": \"HelloBlockchain\",\r\n\"DisplayName\": \"Request Response\",\r\n\"Description\": \"A simple workflow to send a request and receive a response.\",\r\n\"Initiators\": [ \"Requestor\" ],\r\n\"StartState\": \"Request\",\r\n\"Properties\": [\r\n{\r\n\"Name\": \"State\",\r\n\"DisplayName\": \"State\",\r\n\"Description\": \"Holds the state of the contract.\",\r\n\"Type\": {\r\n\"Name\": \"state\"\r\n}\r\n},\r\n{\r\n\"Name\": \"Requestor\",\r\n\"DisplayName\": \"Requestor\",\r\n\"Description\": \"A person sending a request.\",\r\n\"Type\": {\r\n\"Name\": \"Requestor\"\r\n}\r\n},\r\n{\r\n\"Name\": \"Responder\",\r\n\"DisplayName\": \"Responder\",\r\n\"Description\": \"A person sending a response.\",\r\n\"Type\": {\r\n\"Name\": \"Responder\"\r\n}\r\n},\r\n{\r\n\"Name\": \"RequestMessage\",\r\n\"DisplayName\": \"Request Message\",\r\n\"Description\": \"A request message.\",\r\n\"Type\": {\r\n\"Name\": \"string\"\r\n}\r\n},\r\n{\r\n\"Name\": \"ResponseMessage\",\r\n\"DisplayName\": \"Response Message\",\r\n\"Description\": \"A response message.\",\r\n\"Type\": {\r\n\"Name\": \"string\"\r\n}\r\n}\r\n],\r\n\"Constructor\": {\r\n\"Parameters\": [\r\n{\r\n\"Name\": \"message\",\r\n\"Description\": \"...\",\r\n\"DisplayName\": \"Request Message\",\r\n\"Type\": {\r\n\"Name\": \"string\"\r\n}\r\n}\r\n]\r\n},<\/pre>\n<p>This workflow can include state properties:<\/p>\n<pre line=\"1\" lang=\"Javascript\">\"States\": [\r\n{\r\n\"Name\": \"Request\",\r\n\"DisplayName\": \"Request\",\r\n\"Description\": \"...\",\r\n\"PercentComplete\": 50,\r\n\"Value\": 0,\r\n\"Style\": \"Success\",\r\n\"Transitions\": [\r\n{\r\n\"AllowedRoles\": [\"Responder\"],\r\n\"AllowedInstanceRoles\": [],\r\n\"Description\": \"...\",\r\n\"Function\": \"SendResponse\",\r\n\"NextStates\": [ \"Respond\" ],\r\n\"DisplayName\": \"Send Response\"\r\n}\r\n]\r\n},\r\n{\r\n\"Name\": \"Respond\",\r\n\"DisplayName\": \"Respond\",\r\n\"Description\": \"...\",\r\n\"PercentComplete\": 90,\r\n\"Value\": 1,\r\n\"Style\": \"Success\",\r\n\"Transitions\": [\r\n{\r\n\"AllowedRoles\": [],\r\n\"AllowedInstanceRoles\": [\"Requestor\"],\r\n\"Description\": \"...\",\r\n\"Function\": \"SendRequest\",\r\n\"NextStates\": [ \"Request\" ],\r\n\"DisplayName\": \"Send Request\"\r\n}\r\n]\r\n}\r\n]\r\n}\r\n]\r\n}<\/pre>\n<p>You can include functions to present the general contract flow:<\/p>\n<pre line=\"1\" lang=\"Javascript\">\"Functions\": [\r\n{\r\n\"Name\": \"SendRequest\",\r\n\"DisplayName\": \"Request\",\r\n\"Description\": \"...\",\r\n\"Parameters\": [\r\n{\r\n\"Name\": \"requestMessage\",\r\n\"Description\": \"...\",\r\n\"DisplayName\": \"Request Message\",\r\n\"Type\": {\r\n\"Name\": \"string\"\r\n}\r\n}\r\n]\r\n},\r\n{\r\n\"Name\": \"SendResponse\",\r\n\"DisplayName\": \"Response\",\r\n\"Description\": \"...\",\r\n\"Parameters\": [\r\n{\r\n\"Name\": \"responseMessage\",\r\n\"Description\": \"...\",\r\n\"DisplayName\": \"Response Message\",\r\n\"Type\": {\r\n\"Name\": \"string\"\r\n}\r\n}\r\n]\r\n}\r\n],<\/pre>\n<p>Save your file. Now you\u2019re ready with basic blockchain!<\/p>\n<h2>Conclusion<\/h2>\n<p>We have outlined the blockchain codes of various programming languages. Inspired to build and create new blockchains? We hope so! Just choose the code that best suits your needs and requirements. If you are not a developer, but interested in the idea of blockchain technology, don\u2019t hesitate to <span style=\"color: #e70f00;\"><a style=\"color: #e70f00;\" href=\"https:\/\/applicature.com\/contact-us\/\">contact Applicature<\/a><\/span>, and our programmers will build one for you.<\/p>\n<p>Also, make sure to check out the<span style=\"color: #e70f00;\"><a style=\"color: #e70f00;\" href=\"https:\/\/www.linkedin.com\/pulse\/blockchain-platform-as-a-service-product-development-ihor-pidruchny\/?published=t\" target=\"_blank\" rel=\"noopener noreferrer\"> product development framework for blockchain projects<\/a><\/span> presented by Applicature CEO Ihor Pidruchny.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>The cryptocurrency community has valued blockchain technology very highly for almost ten years. It emerged in 2008 designed by Satoshi Nakamoto. Initially, it served as a platform for Bitcoin currency transactions. Over time, it has matured and developed into a multi-purpose public ledger capable of solving a wide range of tasks. In order to deploy [&hellip;]<\/p>\n","protected":false},"author":12,"featured_media":2640,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[132],"tags":[154,156],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Blockchain Technology Example: Choosing the Right Code<\/title>\n<meta name=\"description\" content=\"Blockchain code example for each programming language is exactly what you need to deploy a blockchain. Choose the best code to meet your requirements!\" \/>\n<meta name=\"robots\" content=\"index, follow\" \/>\n<meta name=\"googlebot\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<meta name=\"bingbot\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/applicature.com\/blog\/blockchain-technology\/blockchain-code-examples\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Blockchain Technology Example: Choosing the Right Code\" \/>\n<meta property=\"og:description\" content=\"Blockchain code example for each programming language is exactly what you need to deploy a blockchain. Choose the best code to meet your requirements!\" \/>\n<meta property=\"og:url\" content=\"https:\/\/applicature.com\/blog\/blockchain-technology\/blockchain-code-examples\/\" \/>\n<meta property=\"og:site_name\" content=\"Applicature\" \/>\n<meta property=\"article:publisher\" content=\"https:\/\/www.facebook.com\/applicature\/\" \/>\n<meta property=\"article:published_time\" content=\"2018-10-25T14:24:58+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-02-17T19:57:21+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/10\/Different-Type-of-Blockchain-Coding-01.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"1100\" \/>\n\t<meta property=\"og:image:height\" content=\"575\" \/>\n<meta property=\"fb:app_id\" content=\"156197445002802\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:title\" content=\"Blockchain Technology Example: Choosing the Right Code\" \/>\n<meta name=\"twitter:description\" content=\"Blockchain code example for each programming language is exactly what you need to deploy a blockchain. Choose the best code to meet your requirements!\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebSite\",\"@id\":\"https:\/\/applicature.com\/#website\",\"url\":\"https:\/\/applicature.com\/\",\"name\":\"Applicature\",\"description\":\"Blockchain \/ Smart Contracts \/ Decentralized Apps\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/applicature.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/applicature.com\/blog\/blockchain-technology\/blockchain-code-examples\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/10\/Different-Type-of-Blockchain-Coding-01.jpg\",\"width\":1100,\"height\":575,\"caption\":\"different types of blockchain codes\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/applicature.com\/blog\/blockchain-technology\/blockchain-code-examples\/#webpage\",\"url\":\"https:\/\/applicature.com\/blog\/blockchain-technology\/blockchain-code-examples\/\",\"name\":\"Blockchain Technology Example: Choosing the Right Code\",\"isPartOf\":{\"@id\":\"https:\/\/applicature.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/applicature.com\/blog\/blockchain-technology\/blockchain-code-examples\/#primaryimage\"},\"datePublished\":\"2018-10-25T14:24:58+00:00\",\"dateModified\":\"2020-02-17T19:57:21+00:00\",\"author\":{\"@id\":\"https:\/\/applicature.com\/#\/schema\/person\/17f46426cb241f38a85a4789b6367bc1\"},\"description\":\"Blockchain code example for each programming language is exactly what you need to deploy a blockchain. Choose the best code to meet your requirements!\",\"breadcrumb\":{\"@id\":\"https:\/\/applicature.com\/blog\/blockchain-technology\/blockchain-code-examples\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/applicature.com\/blog\/blockchain-technology\/blockchain-code-examples\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/applicature.com\/blog\/blockchain-technology\/blockchain-code-examples\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"item\":{\"@type\":\"WebPage\",\"@id\":\"https:\/\/applicature.com\/blog\/blockchain-technology\/blockchain-code-examples\/\",\"url\":\"https:\/\/applicature.com\/blog\/blockchain-technology\/blockchain-code-examples\/\",\"name\":\"Blockchain Technology Examples And Types of Blockchain Codes\"}}]},{\"@type\":[\"Person\"],\"@id\":\"https:\/\/applicature.com\/#\/schema\/person\/17f46426cb241f38a85a4789b6367bc1\",\"name\":\"Olga Hryniuk\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/applicature.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/applicature.com\/wp-content\/uploads\/2018\/11\/applicature-figure.png\",\"caption\":\"Olga Hryniuk\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/posts\/2628"}],"collection":[{"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/users\/12"}],"replies":[{"embeddable":true,"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/comments?post=2628"}],"version-history":[{"count":0,"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/posts\/2628\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/media\/2640"}],"wp:attachment":[{"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/media?parent=2628"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/categories?post=2628"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/applicature.com\/wp-json\/wp\/v2\/tags?post=2628"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}